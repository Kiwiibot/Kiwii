{
  // Place your Kiwii workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create a new command": {
    "prefix": "kiwii",
    "body": [
      "import 'package:nyxx/nyxx.dart';",
      "import 'package:nyxx_commands/nyxx_commands.dart';",
      "import '../../kiwii.dart';",
      "",
      "final _permissions = Permissions.sendMessages | Permissions.viewChannel | $6;",
      "final _clientPermissions = Permissions.sendMessages | Permissions.viewChannel | $7;",
      "",
      "final $1Command = ChatCommand(",
      "  '$1',",
      "  '$2',",
      "  id('$1', (ChatContext ctx, ${3:Type} ${4:arg}) async {",
      "    await ctx.respond(MessageBuilder(content: '$5'));",
      "  }),",
      "  checks: [",
      "    BasePermissionsCheck(_permissions),",
      "    BaseSelfPermissionsCheck(_clientPermissions),",
      "  ],",
      "  options: const KiwiiCommandOptions(",
      "    permissions: _permissions,",
      "    clientPermissions: _clientPermissions,",
      "    usage: '{prefix}$1 $8',",
      "    examples: [",
      "      '{prefix}$1 ${9:example}',",
      "    ],",
      "  ),",
      ");",
      ""
    ]
  }
}
